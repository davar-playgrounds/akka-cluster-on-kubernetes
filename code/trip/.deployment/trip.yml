---
apiVersion: apps/v1beta1
kind: Deployment
metadata:
  labels:
    app: trip
    name: trip
  name: trip
spec:
  replicas: 3
  selector:
    matchLabels:
      app: trip
  # rolling update by replacing one instance after the other with max. of 3 replicas at a time
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  # mark the deployment as failed, if not finished in 60 seconds
  progressDeadlineSeconds: 60
  template:
    metadata:
      labels:
        app: trip
        actorSystemName: trip
    spec:
      # Termination grace period calculates as:
      # Internal shutdown timeout (10) + preStop timeout (8) + 5 seconds buffer time
      terminationGracePeriodSeconds: 23
      containers:
      - name: trip
        image: trip:1.0.0
        # Remove for a real project, the image is picked up locally for the integratio test
        imagePullPolicy: Never
        ports:
        # akka remoting
        - name: remoting
          containerPort: 25520
          protocol: TCP
        # akka-management bootstrap
        - name: management
          containerPort: 8558
          protocol: TCP
        # trip http server
        - name: service
          containerPort: 8080
        readinessProbe:
          httpGet:
            path: /system/readiness
            port: service
          # It will take at least 15 seconds that the app is started. Hence, perform the first readiness check after this time.
          initialDelaySeconds: 15
          timeoutSeconds: 2
          periodSeconds: 2
          failureThreshold: 3
        livenessProbe:
          httpGet:
            scheme: HTTP
            path: /system/liveness
            port: service
          # Give the app 30 seconds time to start up before performing the first liveness check.
          initialDelaySeconds: 30
          timeoutSeconds: 2
          periodSeconds: 5
          failureThreshold: 3
        lifecycle:
          preStop:
            exec:
              # Create file for readiness probe.
              # Waiting for readiness check to fail.
              # The readiness check is responsible of taking container out of traffic before actually shutting down.
              # The sleep time is based on the time it takes that the readiness check fails:
              #   readinessProbe.failureThreshold * readinessProbe.periodSeconds + readinessProbe.periodSeconds
              command: ["/bin/bash", "-c", "touch /tmp/shutdown && sleep 8"]
        env:
          # The Kubernetes API discovery will use this service name to look for
          # nodes with this value in the 'app' label.
          # This can be customized with the 'pod-label-selector' setting.
          - name: AKKA_CLUSTER_BOOTSTRAP_SERVICE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: "metadata.labels['app']"

---
apiVersion: v1
kind: Service
metadata:
  name: trip-svc
spec:
  selector:
    app: trip
  ports:
  - name: http
    port: 80
    targetPort: 8080

---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  name: trip-ing
spec:
  backend:
    serviceName: trip-svc
    servicePort: 80

---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: pod-reader
rules:
- apiGroups: [""] # "" indicates the core API group
  resources: ["pods"]
  verbs: ["get", "watch", "list"]
---
kind: RoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: read-pods
subjects:
# Note the `name` line below. The first default refers to the namespace. The second refers to the service account name.
# For instance, `name: system:serviceaccount:myns:default` would refer to the default service account in namespace `myns`
- kind: User
  name: system:serviceaccount:default:default
roleRef:
  kind: Role
  name: pod-reader
  apiGroup: rbac.authorization.k8s.io
